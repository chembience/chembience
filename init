#!/bin/bash
set -e

if [ $# -eq 0 ]; then
    echo "no targets provided (django|rdkit|jupyter|flask|all)"
    exit 1
fi

./env-prepare
source .env

CWD=$(pwd)
INIT_BASE=true

init_base() {
  if [ $INIT_BASE = false ]
  then
    return
  fi
  mkdir -p $CHEMBIENCE_SPHERE
  mkdir -p $CHEMBIENCE_SHARE
  cp .env $CHEMBIENCE_SPHERE
  cp .env $CHEMBIENCE_SHARE
  INIT_BASE=false
  cd $CWD
}

init_django() {
  init_base
  mkdir -p $DJANGO_APP_HOME
  cp -r ./context/app/django/* $DJANGO_APP_HOME
  cp -r ./context/share/* $DJANGO_APP_HOME
  cd $DJANGO_APP_HOME
  cp $CWD/.env .
  sed -i -e 's?@APP_HOME?'${DJANGO_APP_HOME}'?g' app.template.env
  sed -i -e 's?@APP_NAME?'django-rdkit-app'?g' app.template.env
  sed -i -e 's?@APP_VERSION?'${CHEMBIENCE_VERSION}'?g' app.template.env
  sed -i -e 's?@APP_CONNECTION_PORT?'${DJANGO_APP_CONNECTION_PORT}'?g' app.template.env
  sed -i -e 's?@APP_VIRTUAL_HOSTNAME?'${DJANGO_APP_VIRTUAL_HOSTNAME}'?g' app.template.env
  sed -i -e 's?@CHEMBIENCE_SHARE?'${CHEMBIENCE_SHARE}'?g' app.template.env
  cp app.template.env app.env
  ./init
  rm app.template.env
  cd $CWD
}

init_rdkit() {
  init_base
  mkdir -p $RDKIT_APP_HOME
  cp -r ./context/app/rdkit/* $RDKIT_APP_HOME
  cp -r ./context/share/* $RDKIT_APP_HOME
  cd $RDKIT_APP_HOME
  cp $CWD/.env .
  sed -i -e 's?@APP_HOME?'${RDKIT_APP_HOME}'?g' app.template.env
  sed -i -e 's?@APP_NAME?'rdkit-app'?g' app.template.env
  sed -i -e 's?@APP_VERSION?'${CHEMBIENCE_VERSION}'?g' app.template.env
  sed -i -e 's?@CHEMBIENCE_SHARE?'${CHEMBIENCE_SHARE}'?g' app.template.env
  cp app.template.env app.env
  ./init
  rm app.template.env
  cd $CWD
}

init_jupyter () {
  init_base
  mkdir -p $JUPYTER_APP_HOME
  cp -r ./context/app/jupyter/* $JUPYTER_APP_HOME
  cp -r ./context/share/* $JUPYTER_APP_HOME
  cd $JUPYTER_APP_HOME
  cp $CWD/.env .
  sed -i -e 's?@APP_HOME?'${JUPYTER_APP_HOME}'?g' app.template.env
  sed -i -e 's?@APP_NAME?'jupyter-rdkit-app'?g' app.template.env
  sed -i -e 's?@APP_VERSION?'${CHEMBIENCE_VERSION}'?g' app.template.env
  sed -i -e 's?@APP_CONNECTION_PORT?'${JUPYTER_APP_CONNECTION_PORT}'?g' app.template.env
  sed -i -e 's?@APP_VIRTUAL_HOSTNAME?'${JUPYTER_APP_VIRTUAL_HOSTNAME}'?g' app.template.env
  sed -i -e 's?@CHEMBIENCE_SHARE?'${CHEMBIENCE_SHARE}'?g' app.template.env
  cp app.template.env app.env
  mkdir -p ${JUPYTER_NOTEBOOK_DIR}
  ./init
  rm app.template.env
  cd $CWD
}

init_django=false
init_rdkit=false
init_jupyter=false
init_flask=false

while :; do
    case $1 in
        django) init_django=true
        ;;
        rdkit) init_rdkit=true
        ;;
        jupyter) init_jupyter=true
        ;;
        flask) init_flask=true
        ;;
        all) init_django=true;
             init_rdkit=true;
             init_jupyter=true;
             init_flask=true;
        ;;
        *) break
    esac
    shift
done

if [ $init_django = true ]
then
  echo "*** Initializing Chembience Django Template App ..."
  init_django
fi

if [ $init_rdkit = true ]
then
  echo "*** Initializing Chembience RDKit Template App ..."
  init_rdkit
fi

if [ $init_jupyter = true ]
then
  echo "*** Initializing Chembience Jupyter Template App ..."
  init_jupyter
fi

echo "-------------------------------------------------------------"
echo " Initialization has been finished (please read output above)"
echo "-------------------------------------------------------------"
